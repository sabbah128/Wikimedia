#version: '3.1'

services:

  opensearch:
    image: docker.arvancloud.ir/opensearchproject/opensearch:1.2.4
    environment:
      discovery.type: single-node
      plugins.security.disabled: "true" # disable https and logins
      compatibility.override_main_response_version: "true"
    ports:
      - "9200:9200"
      - "9600:9600" # required for Performance Analyzer

  # console at http://localhost:5601/app/dev_tools#/console
  opensearch-dashboards:
    image: docker.arvancloud.ir/opensearchproject/opensearch-dashboards:1.2.0
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: "true"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      # KAFKA_LOG_RETENTION_BYTES: 100000
      KAFKA_LOG_SEGMENT_BYTES: ${LOG_SEGMENT}
      
    volumes:
      - kafka1_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka2
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29093,PLAINTEXT_HOST://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      # KAFKA_LOG_RETENTION_BYTES: 100000
      KAFKA_LOG_SEGMENT_BYTES: ${LOG_SEGMENT}

    volumes:
      - kafka2_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9093", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  kafka3:
    image: confluentinc/cp-kafka:latest
    container_name: kafka3
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29094,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      # KAFKA_LOG_RETENTION_BYTES: 100000
      KAFKA_LOG_SEGMENT_BYTES: ${LOG_SEGMENT}

    volumes:
      - kafka3_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9094", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  init-kafka:
    image: confluentinc/cp-kafka:latest
    container_name: init-kafka
    depends_on:
      kafka1:
        condition: service_healthy
      kafka2:
        condition: service_healthy
      kafka3:
        condition: service_healthy
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e '>>> Creating kafka topics.'
      kafka-topics --bootstrap-server kafka1:29092 --create --if-not-exists --topic ${TOPIC_NAME} --replication-factor 3 --partitions 3 --config min.insync.replicas=2 
      echo -e '>>> Successfully created the following topics.'

      echo -e '>>> The Kafka topic list.'
      kafka-topics --bootstrap-server kafka1:29092 --list

      echo -e 'Describing topic:'
      kafka-topics --bootstrap-server kafka1:29092 --describe --topic ${TOPIC_NAME}
      "

volumes:
  zookeeper_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tmp/zookeeper/data #${PWD}
  zookeeper_log:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tmp/zookeeper/log #${PWD}
  kafka1_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tmp/kafka1/data #${PWD}
  kafka2_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tmp/kafka2/data #${PWD}
  kafka3_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./tmp/kafka3/data #${PWD}